// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OrganizacnaStruktura.Data;

namespace OrganizacnaStruktura.Migrations
{
    [DbContext(typeof(CompaniesContext))]
    [Migration("20210604155542_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("OrganizacnaStruktura.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CeoId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CeoId");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("OrganizacnaStruktura.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("HeadOfDepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HeadOfDepartmentId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("OrganizacnaStruktura.Models.Division", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("HeadOfDivisionId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("HeadOfDivisionId");

                    b.ToTable("Divisions");
                });

            modelBuilder.Entity("OrganizacnaStruktura.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Title")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("OrganizacnaStruktura.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DivisionId")
                        .HasColumnType("int");

                    b.Property<int>("HeadOfProjectId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("DivisionId");

                    b.HasIndex("HeadOfProjectId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("OrganizacnaStruktura.Models.Company", b =>
                {
                    b.HasOne("OrganizacnaStruktura.Models.Employee", "Ceo")
                        .WithMany()
                        .HasForeignKey("CeoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ceo");
                });

            modelBuilder.Entity("OrganizacnaStruktura.Models.Department", b =>
                {
                    b.HasOne("OrganizacnaStruktura.Models.Employee", "HeadOfDepartment")
                        .WithMany()
                        .HasForeignKey("HeadOfDepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OrganizacnaStruktura.Models.Project", null)
                        .WithMany("Departments")
                        .HasForeignKey("ProjectId");

                    b.Navigation("HeadOfDepartment");
                });

            modelBuilder.Entity("OrganizacnaStruktura.Models.Division", b =>
                {
                    b.HasOne("OrganizacnaStruktura.Models.Company", null)
                        .WithMany("Divisions")
                        .HasForeignKey("CompanyId");

                    b.HasOne("OrganizacnaStruktura.Models.Employee", "HeadOfDivision")
                        .WithMany()
                        .HasForeignKey("HeadOfDivisionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HeadOfDivision");
                });

            modelBuilder.Entity("OrganizacnaStruktura.Models.Project", b =>
                {
                    b.HasOne("OrganizacnaStruktura.Models.Division", null)
                        .WithMany("Projects")
                        .HasForeignKey("DivisionId");

                    b.HasOne("OrganizacnaStruktura.Models.Employee", "HeadOfProject")
                        .WithMany()
                        .HasForeignKey("HeadOfProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HeadOfProject");
                });

            modelBuilder.Entity("OrganizacnaStruktura.Models.Company", b =>
                {
                    b.Navigation("Divisions");
                });

            modelBuilder.Entity("OrganizacnaStruktura.Models.Division", b =>
                {
                    b.Navigation("Projects");
                });

            modelBuilder.Entity("OrganizacnaStruktura.Models.Project", b =>
                {
                    b.Navigation("Departments");
                });
#pragma warning restore 612, 618
        }
    }
}
